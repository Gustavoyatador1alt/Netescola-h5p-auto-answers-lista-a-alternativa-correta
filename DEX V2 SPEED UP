// ==UserScript==
// @name         H5P MultiChoice - Responde e avan√ßa automaticamente
// @namespace    http://tampermonkey.net/
// @version      3.3
// @description  Marca respostas corretas e clica no bot√£o Avan√ßar automaticamente no H5P MultiChoice (mesmo em iframes same-origin). Clica no bot√£o Avan√ßar inicial para liberar v√≠deo/conte√∫do. Ignora bot√µes de "Avaliar experi√™ncia".
// @author       Gustavoyatador1
// @match        https://sergoias.portal.sagreseduca.com.br/*
// @match        https://portalnetescola.educacao.go.gov.br/*
// @grant        none
// @run-at       document-end
// @allFrames    true
// ==/UserScript==

(function () {
  'use strict';

  // üöÄ Injetar Eruda
  (function addEruda() {
    if (window.eruda) return;
    const script = document.createElement('script');
    script.src = "https://cdn.jsdelivr.net/npm/eruda";
    script.onload = () => { eruda.init(); };
    document.body.appendChild(script);
  })();

  const clean = (html) =>
    String(html || "")
      .replace(/<[^>]*>/g, " ")
      .replace(/&nbsp;/g, " ")
      .replace(/\s+/g, " ")
      .trim();

  const tryParse = (s) => {
    try { return typeof s === "string" ? JSON.parse(s) : s; } catch { return null; }
  };

  const pullParams = (obj = {}) =>
    obj.params && (obj.params.answers || obj.params.question) ? obj.params : obj;

  const normalize = (s) => String(s || "").toLowerCase().replace(/\s+/g, " ").trim();

  function createBox(doc = document) {
    if (doc.getElementById("h5p-box")) return doc.getElementById("h5p-box");
    const box = doc.createElement("div");
    box.id = "h5p-box";
    box.style.position = "fixed";
    box.style.top = "60px";
    box.style.left = "20px";
    box.style.minWidth = "250px";
    box.style.maxWidth = "400px";
    box.style.background = "#2c3e50";
    box.style.color = "white";
    box.style.border = "2px solid #34495e";
    box.style.borderRadius = "8px";
    box.style.padding = "8px 12px";
    box.style.fontSize = "13px";
    box.style.lineHeight = "1.4";
    box.style.zIndex = "999999";
    box.style.boxShadow = "0 2px 8px rgba(0,0,0,0.3)";
    box.innerHTML = "<b>‚úÖ Respostas:</b><br><i>Aguardando...</i>";
    doc.body.appendChild(box);
    makeDraggable(box);
    return box;
  }

  function makeDraggable(el) {
    let offsetX = 0, offsetY = 0, mouseX = 0, mouseY = 0;
    el.onmousedown = dragMouseDown;
    function dragMouseDown(e) {
      e.preventDefault();
      mouseX = e.clientX;
      mouseY = e.clientY;
      document.onmouseup = closeDragElement;
      document.onmousemove = elementDrag;
    }
    function elementDrag(e) {
      e.preventDefault();
      const dx = mouseX - e.clientX;
      const dy = mouseY - e.clientY;
      mouseX = e.clientX;
      mouseY = e.clientY;
      el.style.top = (el.offsetTop - dy) + "px";
      el.style.left = (el.offsetLeft - dx) + "px";
    }
    function closeDragElement() {
      document.onmouseup = null;
      document.onmousemove = null;
    }
  }

  function extractRows(doc = document) {
    const rows = [];
    const pushFromParams = (raw) => {
      const p = pullParams(raw || {});
      const question = clean(p.question || p.prompt || p.stem || p.title || "");
      const answers = Array.isArray(p.answers) ? p.answers : [];
      answers.forEach((a, idx) => {
        const correct = a.correct === true || a.isCorrect === true || a.correctAnswer === true;
        rows.push({
          question,
          idx,
          letter: String.fromCharCode(65 + idx),
          text: clean(a.text || a.label || a.content || ""),
          correct,
        });
      });
    };

    const HI = doc.defaultView?.H5PIntegration;
    if (HI?.contents) {
      Object.values(HI.contents).forEach((val) => {
        const lib = String(val.library || "").split(" ")[0];
        if (lib === "H5P.MultiChoice") {
          const params = tryParse(val.jsonContent) || val.content || tryParse(val.params) || null;
          pushFromParams(params);
        }
      });
    }

    const H5P = doc.defaultView?.H5P;
    if (H5P && Array.isArray(H5P.instances)) {
      H5P.instances.forEach((inst) => {
        const lib = inst.libraryInfo?.machineName || inst.library?.machineName || inst?.constructor?.name;
        if (lib === "H5P.MultiChoice") {
          const params = inst.options || inst.params || inst.contentData?.params || {};
          pushFromParams(params);
        }
      });
    }

    return rows;
  }

  function autoAnswer(rows, doc = document) {
    const corretas = rows.filter(r => r.correct);
    const options = doc.querySelectorAll(".h5p-answer, .h5p-multi-choice-answer");
    corretas.forEach(r => {
      options.forEach(opt => {
        const text = (opt.innerText || opt.textContent || "").trim();
        if (normalize(text) === normalize(r.text) || text.includes(r.text)) {
          if (!opt.classList.contains("answered")) {
            opt.click();
            opt.classList.add("answered");
            console.log("üü¢ Marcando:", text);
          }
        }
      });
    });

    const checkBtn = doc.querySelector(".h5p-question-check-answer, .h5p-multi-choice-submit");
    if (checkBtn && !checkBtn.disabled) checkBtn.click();
  }

  const responded = (doc = document) =>
    !doc.querySelector(".h5p-question-check-answer, .h5p-multi-choice-submit");

  function autoClickNext(doc = document) {
    if (!responded(doc)) return;

    const nextBtn = Array.from(
      doc.querySelectorAll("button.nui-button.nui-button-medium.nui-button-curved.nui-button-solid.nui-button-primary")
    ).find(b => {
      const t = (b.innerText || "").toLowerCase();
      return !t.includes("avaliar") && !t.includes("experi√™ncia");
    });

    if (nextBtn && !nextBtn.disabled) {
      console.log("‚ñ∂Ô∏è Clicando no bot√£o Avan√ßar (filtrado)");
      nextBtn.click();
    }
  }

  function clickInitialAdvance(doc = document) {
    const btn = Array.from(
      doc.querySelectorAll("button.nui-button.nui-button-medium.nui-button-curved.nui-button-solid.nui-button-primary")
    ).find(b => {
      const t = (b.innerText || "").toLowerCase();
      return !t.includes("avaliar") && !t.includes("experi√™ncia");
    });

    if (btn && !btn.disabled) {
      console.log("‚ñ∂Ô∏è Clicando no bot√£o inicial Avan√ßar (filtrado)");
      btn.click();
      return true;
    }
    return false;
  }

  function refresh(doc = document) {
    if (clickInitialAdvance(doc)) return;
    const rows = extractRows(doc);
    if (!rows.length) {
      const box = createBox(doc);
      box.innerHTML = "<b>‚úÖ H5P:</b><br><i>Nada encontrado.</i>";
      return;
    }
    autoAnswer(rows, doc);
    setTimeout(() => autoClickNext(doc), 1500);
    const box = createBox(doc);
    let html = "<b>‚úÖ H5P:</b><br><table style='width:100%; font-size:12px;'>";
    rows.forEach((r) => {
      html += `<tr><td>${r.correct ? "‚úÖ" : "‚ùå"}</td><td>${r.letter}</td><td>${r.text}</td></tr>`;
    });
    html += "</table>";
    box.innerHTML = html;
  }

  function scanIframe() {
    document.querySelectorAll("iframe").forEach((frame) => {
      try {
        const doc = frame.contentDocument;
        if (!doc) return;
        refresh(doc);
        doc.addEventListener("DOMContentLoaded", () => refresh(doc));
        console.log("üîÑ Injetado em iframe (same-origin)");
      } catch (e) {
        console.warn("‚ö†Ô∏è Iframe bloqueado por CORS:", e);
      }
    });
  }

  function init() {
    console.log("üß† Script H5P ativo em:", location.href);
    refresh(document);
    setInterval(() => refresh(document), 500);
    setInterval(scanIframe, 700);
  }

  init();
})();
